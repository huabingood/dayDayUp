# 定义root logger，输出的级别是DEBUG，分别输出到console,dailyFile中
log4j.rootLogger=DEBUG,console,dailyFile

##############################################################
# 控制台(console)

# 具体的输出到控制台引用的是哪个类
log4j.appender.console=org.apache.log4j.ConsoleAppender
# 输出到控制台的日志级别
log4j.appender.console.Threshold=DEBUG
# 是否立即输出
log4j.appender.console.ImmediateFlush=true
# 以System.err输出
log4j.appender.console.Target=System.err
# 以指定布局格式输出
log4j.appender.console.layout=org.apache.log4j.PatternLayout
# 具体的指定布局，反正我不懂
log4j.appender.console.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n


##############################################################
# 定期回滚日志文件(dailyFile)

# 具体使用到到的回滚的类
log4j.appender.dailyFile=org.apache.log4j.DailyRollingFileAppender
# 输出的日志级别
log4j.appender.dailyFile.Threshold=DEBUG
# 是否立即输出
log4j.appender.dailyFile.ImmediateFlush=true
# 是否追加到指定的日志文件中
log4j.appender.dailyFile.Append=true
# 日志问价的路径
log4j.appender.dailyFile.File=../log/mylogs
# 老的日志文件的存放格式（这里的按照天来增加日志）
log4j.appender.dailyFile.DatePattern='.'yyyy-MM-dd
# 输出的日志文件的格式：为自定义格式
log4j.appender.dailyFile.layout=org.apache.log4j.PatternLayout
# 自定义输出的日志文件的格式
log4j.appender.dailyFile.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n
